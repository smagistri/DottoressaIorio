@page "/patients/edit/{id:int}"
@inject ApplicationDbContext dbContext
@inject NavigationManager navigationManager

@using DottoressaIorio.App.Models

@using DottoressaIorio.App.Data

<PageTitle>Edit Patient</PageTitle>
<h1>Edit Patient</h1>

<a href="/patients">Torna indietro</a>
@if (model == null)
{
    <p>Invalid patient ID or patient not found.</p>
}
else
{
    <EditForm Model="model" OnValidSubmit="UpdatePatient" class="needs-validation" novalidate>
        <DataAnnotationsValidator />
        <div class="row g-3">
            <div class="col-12">
                <label for="Title">Title</label>
                <InputText id="Title" @bind-Value="model.Title" class="form-control" />
            </div>
        </div>
        <div class="row g-3">
            <div class="col-12">
                <label for="FirstName">First Name</label>
                <InputText id="FirstName" @bind-Value="model.FirstName" class="form-control" />
                <ValidationMessage For="@(() => model.FirstName)" />
            </div>
        </div>
        <div class="row g-3">
            <div class="col-12">
                <label for="LastName">Last Name</label>
                <InputText id="LastName" @bind-Value="model.LastName" class="form-control" />
                <ValidationMessage For="@(() => model.LastName)" />
            </div>
        </div>
        <div class="row g-3">
            <div class="col-12">
                <label for="DateOfBirth">Date of Birth</label>
                <InputDate id="DateOfBirth" @bind-Value="model.DateOfBirth" class="form-control" />
                <ValidationMessage For="@(() => model.DateOfBirth)" />
            </div>
        </div>
        <div class="row g-3">
            <div class="col-12">
                <label for="PlaceOfBirth">Place of Birth</label>
                <InputText id="PlaceOfBirth" @bind-Value="model.PlaceOfBirth" class="form-control" />
            </div>
        </div>
        <div class="row g-3">
            <div class="col-12">
                <label for="Gender">Gender</label>
                <InputText id="Gender" @bind-Value="model.Gender" class="form-control" />
            </div>
        </div>
        <div class="row g-3">
            <div class="col-12">
                <label for="PhoneNumber">Phone Number</label>
                <input type="tel" id="PhoneNumber" class="form-control" @bind="model.PhoneNumber">
            </div>
        </div>

        <div class="form-group">
            <label for="Email">Email</label>
            <input type="email" id="Email" @bind="model.Email" class="form-control">
            <ValidationMessage For="@(() => model.Email)" />
        </div>
        <hr class="my-4">
        <button type="submit" class="w-100 btn btn-primary btn-lg">Salva</button>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Patient model;

    protected override void OnInitialized()
    {
        model = dbContext.Patients.Find(Id);
    }

    private async Task UpdatePatient()
    {
        model.EditDate = DateTime.Now;
        dbContext.Patients.Update(model);
        await dbContext.SaveChangesAsync();
        navigationManager.NavigateTo("/patients");
    }
}