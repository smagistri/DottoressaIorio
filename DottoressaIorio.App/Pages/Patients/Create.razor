@page "/create-patient"
@using DottoressaIorio.App.Models
@using DottoressaIorio.App.Data
@inject ApplicationDbContext dbContext
@inject NavigationManager navigationManager

<PageTitle>Nuovo Paziente</PageTitle>
<h1>Nuovo Paziente</h1>
<hr class="my-4">

<EditForm Model="@model" OnValidSubmit="@CreatePatient" class="needs-validation" novalidate>
    <DataAnnotationsValidator />

    <div class="row g-3">
        <div class="col-12">
            <label>Nome:*</label>
            <input class="form-control" @bind="model.FirstName" />
            <ValidationMessage For="@(() => model.FirstName)" />
        </div>
    </div>
    <div class="row g-3">
        <div class="col-12">
            <label>Cognome:*</label>
            <input class="form-control" @bind="model.LastName" />
            <ValidationMessage For="@(() => model.LastName)" />
        </div>
    </div>
    <div class="row g-3">
        <div class="col-12">
            <label>Data di Nascita (es: 31/12/1979):*</label>
            <input type="date" class="form-control" @bind="model.DateOfBirth" />
            <ValidationMessage For="@(() => model.DateOfBirth)" />
        </div>
    </div>
    <div class="row g-3">
        <div class="col-12">
            <label>Indirizzo email:*</label>
            <input type="email" class="form-control" @bind="model.Email" placeholder="name@example.com" />
            <ValidationMessage For="@(() => model.Email)" />
        </div>
    </div>
    <hr class="my-4">
    <button type="submit" class="w-100 btn btn-primary btn-lg">Salva</button>
</EditForm>

@code {
    private readonly Patient model = new();

    private async Task CreatePatient()
    {
        model.CreatedDate = DateTime.Now;
        dbContext.Patients.Add(model);
        await dbContext.SaveChangesAsync();
        navigationManager.NavigateTo($"/patient/{model.PatientId}/therapies");
    }
}